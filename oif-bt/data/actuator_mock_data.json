{
    "actuator_id": "eee37019-0bf5-4470-a29e-2635e4386952",
    "name": "Actuator - Lang",
    "device_id": "8cafb22b-727f-4917-834b-741952ccde34",
    "profile_type": "Language_schema_with_errata",
    "actuator_schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://oasis-open.org/openc2/oc2ls/v1.0.1",
        "title": "Language schema with errata",
        "version": "0",
        "description": "OpenC2 LS version 1.0 + errata",
        "type": "object",
        "additionalProperties": false,
        "properties": {
            "openc2_command": {
                "$ref": "#/definitions/OpenC2-Command"
            },
            "openc2_response": {
                "$ref": "#/definitions/OpenC2-Response"
            }
        },
        "definitions": {
            "OpenC2-Command": {
                "title": "OpenC2 Command",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "action",
                    "target"
                ],
                "maxProperties": 100,
                "properties": {
                    "action": {
                        "$ref": "#/definitions/Action",
                        "description": "The task or activity to be performed (i.e., the 'verb')."
                    },
                    "target": {
                        "$ref": "#/definitions/Target",
                        "description": "The object of the Action. The Action is performed on the Target."
                    },
                    "args": {
                        "$ref": "#/definitions/Args",
                        "description": "Additional information that applies to the Command."
                    },
                    "actuator": {
                        "$ref": "#/definitions/Actuator",
                        "description": "The subject of the Action. The Actuator executes the Action on the Target."
                    },
                    "command_id": {
                        "type": "string",
                        "description": "An identifier of this Command.",
                        "maxLength": 255
                    }
                }
            },
            "OpenC2-Response": {
                "title": "OpenC2 Response",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status"
                ],
                "maxProperties": 100,
                "properties": {
                    "status": {
                        "$ref": "#/definitions/Status-Code",
                        "description": "An integer status code"
                    },
                    "status_text": {
                        "type": "string",
                        "description": "A free-form human-readable description of the Response status",
                        "maxLength": 255
                    },
                    "results": {
                        "$ref": "#/definitions/Results",
                        "description": "Map of key:value pairs that contain additional results based on the invoking Command."
                    }
                }
            },
            "Action": {
                "title": "Action",
                "type": "string",
                "enum": [
                    "scan",
                    "locate",
                    "query",
                    "deny",
                    "contain",
                    "allow",
                    "start",
                    "stop",
                    "restart",
                    "cancel",
                    "set",
                    "update",
                    "redirect",
                    "create",
                    "delete",
                    "detonate",
                    "restore",
                    "copy",
                    "investigate",
                    "remediate"
                ]
            },
            "Target": {
                "title": "Target",
                "type": "object",
                "description": "OpenC2 Target datatypes",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 1,
                "properties": {
                    "artifact": {
                        "$ref": "#/definitions/Artifact",
                        "description": "An array of bytes representing a file-like object or a link to that object."
                    },
                    "command": {
                        "type": "string",
                        "description": "A reference to a previously issued Command.",
                        "maxLength": 255
                    },
                    "device_id": {
                        "$ref": "#/definitions/Device",
                        "description": "The properties of a hardware device."
                    },
                    "domain_name": {
                        "$ref": "#/definitions/Domain-Name",
                        "description": "A network domain name."
                    },
                    "email_addr": {
                        "$ref": "#/definitions/Email-Addr",
                        "description": "A single email address."
                    },
                    "features": {
                        "$ref": "#/definitions/Features",
                        "description": "A set of items used with the query Action to determine an Actuator's capabilities."
                    },
                    "file": {
                        "$ref": "#/definitions/File",
                        "description": "Properties of a file."
                    },
                    "idn_domain_name": {
                        "$ref": "#/definitions/IDN-Domain-Name",
                        "description": "An internationalized domain name."
                    },
                    "idn_email_addr": {
                        "$ref": "#/definitions/IDN-Email-Addr",
                        "description": "A single internationalized email address."
                    },
                    "ipv4_net": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "An IPv4 address range including CIDR prefix length."
                    },
                    "ipv6_net": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "An IPv6 address range including prefix length."
                    },
                    "ipv4_connection": {
                        "$ref": "#/definitions/IPv4-Connection",
                        "description": "A 5-tuple of source and destination IPv4 address ranges, source and destination ports, and protocol"
                    },
                    "ipv6_connection": {
                        "$ref": "#/definitions/IPv6-Connection",
                        "description": "A 5-tuple of source and destination IPv6 address ranges, source and destination ports, and protocol"
                    },
                    "iri": {
                        "$ref": "#/definitions/IRI",
                        "description": "An internationalized resource identifier (IRI)."
                    },
                    "mac_addr": {
                        "$ref": "#/definitions/MAC-Addr",
                        "description": "A Media Access Control (MAC) address - EUI-48 or EUI-64 as defined in [[EUI]](#eui)"
                    },
                    "process": {
                        "$ref": "#/definitions/Process",
                        "description": "Common properties of an instance of a computer program as executed on an operating system."
                    },
                    "properties": {
                        "$ref": "#/definitions/Properties",
                        "description": "Data attribute associated with an Actuator"
                    },
                    "uri": {
                        "$ref": "#/definitions/URI",
                        "description": "A uniform resource identifier (URI)."
                    }
                }
            },
            "Args": {
                "title": "Args",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "start_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to initiate the Command"
                    },
                    "stop_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to terminate the Command"
                    },
                    "duration": {
                        "$ref": "#/definitions/Duration",
                        "description": "The length of time for an Command to be in effect"
                    },
                    "response_requested": {
                        "$ref": "#/definitions/Response-Type",
                        "description": "The type of Response required for the Command: `none`, `ack`, `status`, `complete`."
                    }
                }
            },
            "Actuator": {
                "title": "Actuator",
                "type": "string",
                "description": "xxxxxxx",
                "maxLength": 255
            },
            "Results": {
                "title": "Results",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of OpenC2 language versions supported by this Actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "array",
                            "description": "List of OpenC2 language versions supported by this Actuator",
                            "uniqueItems": true,
                            "maxItems": 100,
                            "items": {
                                "$ref": "#/definitions/Version"
                            }
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "description": "List of profiles supported by this Actuator",
                        "maxItems": 100,
                        "items": {
                            "$ref": "#/definitions/Nsid"
                        }
                    },
                    "pairs": {
                        "$ref": "#/definitions/Action-Targets",
                        "description": "List of targets applicable to each supported Action"
                    },
                    "rate_limit": {
                        "type": "number",
                        "description": "Maximum number of requests per minute supported by design or policy"
                    }
                }
            },
            "Action-Targets": {
                "title": "Action Targets",
                "type": "object",
                "description": "Map of each action supported by this actuator to the list of targets applicable to that action",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "scan": {
                        "$ref": "#/definitions/Targets"
                    },
                    "locate": {
                        "$ref": "#/definitions/Targets"
                    },
                    "query": {
                        "$ref": "#/definitions/Targets"
                    },
                    "deny": {
                        "$ref": "#/definitions/Targets"
                    },
                    "contain": {
                        "$ref": "#/definitions/Targets"
                    },
                    "allow": {
                        "$ref": "#/definitions/Targets"
                    },
                    "start": {
                        "$ref": "#/definitions/Targets"
                    },
                    "stop": {
                        "$ref": "#/definitions/Targets"
                    },
                    "restart": {
                        "$ref": "#/definitions/Targets"
                    },
                    "cancel": {
                        "$ref": "#/definitions/Targets"
                    },
                    "set": {
                        "$ref": "#/definitions/Targets"
                    },
                    "update": {
                        "$ref": "#/definitions/Targets"
                    },
                    "redirect": {
                        "$ref": "#/definitions/Targets"
                    },
                    "create": {
                        "$ref": "#/definitions/Targets"
                    },
                    "delete": {
                        "$ref": "#/definitions/Targets"
                    },
                    "detonate": {
                        "$ref": "#/definitions/Targets"
                    },
                    "restore": {
                        "$ref": "#/definitions/Targets"
                    },
                    "copy": {
                        "$ref": "#/definitions/Targets"
                    },
                    "investigate": {
                        "$ref": "#/definitions/Targets"
                    },
                    "remediate": {
                        "$ref": "#/definitions/Targets"
                    }
                }
            },
            "Targets": {
                "title": "Targets",
                "type": "array",
                "description": "List of JSON Pointers to Target types",
                "uniqueItems": true,
                "minItems": 1,
                "maxItems": 100,
                "items": {
                    "$ref": "#/definitions/Target"
                }
            },
            "Status-Code": {
                "title": "Status Code",
                "type": "integer",
                "enum": [
                    102,
                    200,
                    400,
                    401,
                    403,
                    404,
                    500,
                    501,
                    503
                ]
            },
            "Artifact": {
                "title": "Artifact",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "mime_type": {
                        "type": "string",
                        "description": "Permitted values specified in the IANA Media Types registry, [[RFC6838]](#rfc6838)",
                        "maxLength": 255
                    },
                    "payload": {
                        "$ref": "#/definitions/Payload",
                        "description": "Choice of literal content or URL"
                    },
                    "hashes": {
                        "$ref": "#/definitions/Hashes",
                        "description": "Hashes of the payload content"
                    }
                }
            },
            "Device": {
                "title": "Device",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "hostname": {
                        "$ref": "#/definitions/Hostname",
                        "description": "A hostname that can be used to connect to this device over a network"
                    },
                    "idn_hostname": {
                        "$ref": "#/definitions/IDN-Hostname",
                        "description": "An internationalized hostname that can be used to connect to this device over a network"
                    },
                    "device_id": {
                        "type": "string",
                        "description": "An identifier that refers to this device within an inventory or management system",
                        "maxLength": 255
                    }
                }
            },
            "Domain-Name": {
                "title": "Domain Name",
                "type": "string",
                "description": "[[RFC1034]](#rfc1034), Section 3.5",
                "format": "hostname",
                "maxLength": 255
            },
            "Email-Addr": {
                "title": "Email Addr",
                "type": "string",
                "description": "Email address, [[RFC5322]](#rfc5322), Section 3.4.1",
                "format": "email",
                "maxLength": 255
            },
            "Features": {
                "title": "Features",
                "type": "array",
                "description": "An array of zero to ten names used to query an Actuator for its supported capabilities.",
                "uniqueItems": true,
                "maxItems": 10,
                "items": {
                    "$ref": "#/definitions/Feature"
                }
            },
            "File": {
                "title": "File",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the file as defined in the file system",
                        "maxLength": 255
                    },
                    "path": {
                        "type": "string",
                        "description": "The absolute path to the location of the file in the file system",
                        "maxLength": 255
                    },
                    "hashes": {
                        "$ref": "#/definitions/Hashes",
                        "description": "One or more cryptographic hash codes of the file contents"
                    }
                }
            },
            "IDN-Domain-Name": {
                "title": "IDN Domain Name",
                "type": "string",
                "description": "Internationalized Domain Name, [[RFC5890]](#rfc5890), Section 2.3.2.3.",
                "format": "idn-hostname",
                "maxLength": 255
            },
            "IDN-Email-Addr": {
                "title": "IDN Email Addr",
                "type": "string",
                "description": "Internationalized email address, [[RFC6531]](#rfc6531)",
                "format": "idn-email",
                "maxLength": 255
            },
            "IPv4-Net": {
                "title": "IPv4 Net",
                "type": "string",
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])(\\/(3[0-2]|[0-2]?[0-9]))?$"
            },
            "IPv4-Connection": {
                "title": "IPv4 Connection",
                "type": "object",
                "description": "5-tuple that specifies a tcp/ip connection",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "source service per [[RFC6335]](#rfc6335)"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "destination service per [[RFC6335]](#rfc6335)"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "layer 4 protocol (e.g., TCP) - see [Section 3.4.2.10](#34210-l4-protocol)"
                    }
                }
            },
            "IPv6-Net": {
                "title": "IPv6 Net",
                "type": "string",
                "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
            },
            "IPv6-Connection": {
                "title": "IPv6 Connection",
                "type": "object",
                "description": "5-tuple that specifies a tcp/ip connection",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "source service per [[RFC6335]](#rfc6335)"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "destination service per [[RFC6335]](#rfc6335)"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "layer 4 protocol (e.g., TCP) - [Section 3.4.2.10](#34210-l4-protocol)"
                    }
                }
            },
            "IRI": {
                "title": "IRI",
                "type": "string",
                "description": "Internationalized Resource Identifier, [[RFC3987]](#rfc3987).",
                "format": "iri",
                "maxLength": 255
            },
            "MAC-Addr": {
                "title": "MAC Addr",
                "type": "string",
                "description": "Media Access Control / Extended Unique Identifier address - EUI-48 or EUI-64 as defined in [[EUI]](#eui).",
                "pattern": "^([0-9a-fA-F]{2}[:-]){5}[0-9A-Fa-f]{2}(([:-][0-9A-Fa-f]{2}){2})?$"
            },
            "Process": {
                "title": "Process",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "pid": {
                        "type": "integer",
                        "description": "Process ID of the process",
                        "minimum": 0
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the process",
                        "maxLength": 255
                    },
                    "cwd": {
                        "type": "string",
                        "description": "Current working directory of the process",
                        "maxLength": 255
                    },
                    "executable": {
                        "$ref": "#/definitions/File",
                        "description": "Executable that was executed to start the process"
                    },
                    "parent": {
                        "$ref": "#/definitions/Process",
                        "description": "Process that spawned this one"
                    },
                    "command_line": {
                        "type": "string",
                        "description": "The full command line invocation used to start this process, including all arguments",
                        "maxLength": 255
                    }
                }
            },
            "Properties": {
                "title": "Properties",
                "type": "array",
                "description": "A list of names that uniquely identify properties of an Actuator.",
                "uniqueItems": true,
                "minItems": 1,
                "maxItems": 100,
                "items": {
                    "type": "string"
                }
            },
            "URI": {
                "title": "URI",
                "type": "string",
                "description": "Uniform Resource Identifier, [[RFC3986]](#rfc3986).",
                "format": "uri",
                "maxLength": 255
            },
            "Date-Time": {
                "title": "Date Time",
                "type": "integer",
                "description": "Date and Time",
                "minimum": 0
            },
            "Duration": {
                "title": "Duration",
                "type": "integer",
                "description": "A length of time",
                "minimum": 0
            },
            "Feature": {
                "title": "Feature",
                "type": "string",
                "description": "Specifies the results to be returned from a query features Command",
                "enum": [
                    "versions",
                    "profiles",
                    "pairs",
                    "rate_limit"
                ]
            },
            "Hashes": {
                "title": "Hashes",
                "type": "object",
                "description": "Cryptographic Hash values",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 100,
                "properties": {
                    "md5": {
                        "type": "string",
                        "description": "MD5 hash as defined in [[RFC1321]](#rfc1321)",
                        "contentEncoding": "base16"
                    },
                    "sha1": {
                        "type": "string",
                        "description": "SHA1 hash as defined in [[RFC6234]](#rfc6234)",
                        "contentEncoding": "base16"
                    },
                    "sha256": {
                        "type": "string",
                        "description": "SHA256 hash as defined in [[RFC6234]](#rfc6234)",
                        "contentEncoding": "base16"
                    }
                }
            },
            "Hostname": {
                "title": "Hostname",
                "type": "string",
                "description": "Internet host name as specified in [[RFC1123]](#rfc1123)",
                "format": "hostname",
                "maxLength": 255
            },
            "IDN-Hostname": {
                "title": "IDN Hostname",
                "type": "string",
                "description": "Internationalized Internet host name as specified in [[RFC5890]](#rfc5890), Section 2.3.2.3.",
                "format": "idn-hostname",
                "maxLength": 255
            },
            "IPv4-Addr": {
                "title": "IPv4 Addr",
                "type": "string",
                "description": "32 bit IPv4 address as defined in [[RFC0791]](#rfc0791)",
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])$"
            },
            "IPv6-Addr": {
                "title": "IPv6 Addr",
                "type": "string",
                "description": "128 bit IPv6 address as defined in [[RFC8200]](#rfc8200)",
                "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)$"
            },
            "L4-Protocol": {
                "title": "L4 Protocol",
                "type": "string",
                "description": "Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value, [RFC5237]",
                "enum": [
                    "icmp",
                    "tcp",
                    "udp",
                    "sctp"
                ]
            },
            "Nsid": {
                "title": "Nsid",
                "type": "string",
                "description": "A short identifier that refers to a namespace.",
                "minLength": 1,
                "maxLength": 16
            },
            "Payload": {
                "title": "Payload",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 1,
                "properties": {
                    "bin": {
                        "type": "string",
                        "description": "Specifies the data contained in the artifact",
                        "contentEncoding": "base64url"
                    },
                    "url": {
                        "$ref": "#/definitions/URI",
                        "description": "MUST be a valid URL that resolves to the un-encoded content"
                    }
                }
            },
            "Port": {
                "title": "Port",
                "type": "integer",
                "description": "Transport Protocol Port Number, [[RFC6335]](#rfc6335)",
                "minimum": 0,
                "maximum": 65535
            },
            "Response-Type": {
                "title": "Response Type",
                "type": "string",
                "enum": [
                    "none",
                    "ack",
                    "status",
                    "complete"
                ]
            },
            "Version": {
                "title": "Version",
                "type": "string",
                "description": "Major.Minor version number",
                "maxLength": 255
            }
        }
    }
}

{
    "actuator_id": "6ded6002-0c8b-41c3-9010-e1876ac27340",
    "name": "Actuator - SLPF",
    "device_id": "d9f97191-ff33-4542-bf46-0c79e6cf10d2",
    "profile_type": "slpf",
    "actuator_schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://oasis-open.org/openc2/oc2slpf/v1.0/schema.json",
        "title": "slpf",
        "description": "This schema is intended to validate all possible content for the OpenC2 Stateless Packet Filter version 1.0",
        "type": "object",
        "oneOf": [
            {
                "$ref": "#/definitions/OpenC2-Command",
                "description": "A message defined by an Action-Target pair that is sent from a Producer and received by a Consumer"
            },
            {
                "$ref": "#/definitions/OpenC2-Response",
                "description": "A message from a Consumer to a Producer acknowledging a Command or returning the requested resources or status to a previously received Command"
            }
        ],
        "definitions": {
            "OpenC2-Command": {
                "title": "OpenC2 Command",
                "type": "object",
                "description": "The Command defines an Action to be performed on a Target",
                "additionalProperties": false,
                "required": [
                    "action",
                    "target"
                ],
                "properties": {
                    "action": {
                        "$ref": "#/definitions/Action",
                        "description": "The task or activity to be performed (i.e., the 'verb')"
                    },
                    "target": {
                        "$ref": "#/definitions/Target",
                        "description": "The object of the Action. The Action is performed on the Target"
                    },
                    "args": {
                        "$ref": "#/definitions/Args",
                        "description": "Additional information that applies to the Command"
                    },
                    "actuator": {
                        "$ref": "#/definitions/Actuator",
                        "description": "The subject of the Action. The Actuator executes the Action on the Target"
                    },
                    "command_id": {
                        "$ref": "#/definitions/Command-ID",
                        "description": "An identifier of this Command"
                    }
                }
            },
            "OpenC2-Response": {
                "title": "OpenC2 Response",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "$ref": "#/definitions/Status-Code",
                        "description": "An integer status code"
                    },
                    "status_text": {
                        "type": "string",
                        "description": "A free-form human-readable description of the response status"
                    },
                    "results": {
                        "$ref": "#/definitions/Results",
                        "description": "Map of key:value pairs that contain additional results based on the invoking Command"
                    }
                }
            },
            "Action": {
                "title": "OpenC2 Action",
                "type": "string",
                "oneOf": [
                    {
                        "const": "query",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings"
                    },
                    {
                        "const": "deny",
                        "description": "Prevent traffic or access"
                    },
                    {
                        "const": "allow",
                        "description": "Permit traffic or access"
                    },
                    {
                        "const": "update",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update"
                    },
                    {
                        "const": "delete",
                        "description": "Remove an access rule"
                    }
                ]
            },
            "Target": {
                "title": "OpenC2 Target",
                "type": "object",
                "properties": {
                    "features": {
                        "$ref": "#/definitions/Features",
                        "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                    },
                    "file": {
                        "$ref": "#/definitions/File",
                        "description": "Properties of a file"
                    },
                    "ipv4_net": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                    },
                    "ipv6_net": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                    },
                    "ipv4_connection": {
                        "$ref": "#/definitions/IPv4-Connection",
                        "description": "a network connection as specified by a five-tuple (IPv4)"
                    },
                    "ipv6_connection": {
                        "$ref": "#/definitions/IPv6-Connection",
                        "description": "A network connection as specified by a five-tuple (IPv4)"
                    },
                    "slpf:rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                    }
                },
                "minProperties": 1,
                "maxProperties": 1,
                "additionalProperties": false
            },
            "Actuator": {
                "title": "OpenC2 Actuator",
                "type": "object",
                "properties": {
                    "slpf": {
                        "$ref": "#/definitions/slpf:Actuator",
                        "description": "Actuator specifiers defined in the Stateless Packet Filtering profile. A message can specify many Actuator types but for it to validate with this profile it must at least specify SLPF"
                    }
                },
                "required": [
                    "slpf"
                ],
                "additionalProperties": true
            },
            "Args": {
                "title": "OpenC2 Args",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "start_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to initiate the action"
                    },
                    "stop_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to terminate the action"
                    },
                    "duration": {
                        "$ref": "#/definitions/Duration",
                        "description": "The length of time for an action to be in effect"
                    },
                    "response_requested": {
                        "$ref": "#/definitions/Response-Type",
                        "description": "The type of Response required for the Command: none, ack, status, complete"
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Args",
                        "description": "Command arguments defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Status-Code": {
                "title": "OpenC2 Status Code",
                "type": "integer",
                "oneOf": [
                    {
                        "const": 102,
                        "description": "Processing - an interim response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it"
                    },
                    {
                        "const": 200,
                        "description": "OK - the Command has succeeded"
                    },
                    {
                        "const": 400,
                        "description": "Bad Request - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)"
                    },
                    {
                        "const": 500,
                        "description": "Internal Error - the Consumer encountered an unexpected condition that prevented it from performing the Command"
                    },
                    {
                        "const": 501,
                        "description": "Not Implemented - the Consumer does not support the functionality required to perform the Command"
                    }
                ]
            },
            "Results": {
                "title": "OpenC2 Response Results",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of OpenC2 language versions supported by this Actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Version"
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "description": "list of profiles supported by this actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Nsid"
                        }
                    },
                    "pairs": {
                        "$ref": "#/definitions/Action-Targets",
                        "description": "List of Targets applicable to each supported Action"
                    },
                    "rate_limit": {
                        "type": "number",
                        "description": "Maximum number of requests per minute supported by design or policy",
                        "minimum": 0
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Response",
                        "description": "Response types defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Features": {
                "title": "OpenC2 Features Items",
                "type": "array",
                "description": "An array of zero to ten names used to query an Actuator for its supported capabilities",
                "uniqueItems": true,
                "minItems": 0,
                "maxItems": 10,
                "items": {
                    "$ref": "#/definitions/Feature"
                }
            },
            "File": {
                "title": "OpenC2 File",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the file as defined in the file system"
                    },
                    "path": {
                        "type": "string",
                        "description": "The absolute path to the location of the file in the file system"
                    },
                    "hashes": {
                        "$ref": "#/definitions/Hashes",
                        "description": "One or more cryptographic hash codes of the file contents"
                    }
                }
            },
            "IPv4-Net": {
                "title": "OpenC2 IPv4 Net",
                "type": "string",
                "description": "IPv4 address as defined in [RFC0791] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])(\\/(3[0-2]|[0-2]?[0-9]))?"
            },
            "IPv4-Connection": {
                "title": "OpenC2 IPv4 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "IPv6-Net": {
                "title": "OpenC2 IPv6 Net",
                "type": "string",
                "description": "IPv6 address as defined in [RFC8200] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
            },
            "IPv6-Connection": {
                "title": "OpenC2 IPv6 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "Action-Targets": {
                "title": "OpenC2 Action Target Pairs",
                "type": "object",
                "description": "Map of each action supported by this Actuator to the list of Targets applicable to the specific Action",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "allow": {
                        "type": "array",
                        "description": "Permit traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "deny": {
                        "type": "array",
                        "description": "Prevent traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "query": {
                        "type": "array",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "features",
                                    "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                                }
                            ]
                        }
                    },
                    "delete": {
                        "type": "array",
                        "description": "Remove an access rule",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "slpf:rule_number",
                                    "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                                }
                            ]
                        }
                    },
                    "update": {
                        "type": "array",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "file",
                                    "description": "Properties of a file"
                                }
                            ]
                        }
                    }
                }
            },
            "Date-Time": {
                "title": "OpenC2 Date Time",
                "type": "integer",
                "description": "Date and Time - milliseconds since 00:00:00 UTC, 1 January 1970",
                "minimum": 0
            },
            "Duration": {
                "title": "OpenC2 Duration",
                "type": "integer",
                "description": "A length of time - number of milliseconds",
                "minimum": 0
            },
            "Feature": {
                "title": "OpenC2 Feature",
                "type": "string",
                "oneOf": [
                    {
                        "const": "versions",
                        "description": "List of OpenC2 Language versions supported by this Actuator"
                    },
                    {
                        "const": "profiles",
                        "description": "List of profiles supported by this Actuator"
                    },
                    {
                        "const": "pairs",
                        "description": "List of supported Actions and applicable Targets"
                    },
                    {
                        "const": "rate_limit",
                        "description": "Maximum number of Commands per minute supported by design or policy"
                    }
                ]
            },
            "Hashes": {
                "title": "OpenC2 Hashes",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "md5": {
                        "$ref": "#/definitions/Binary",
                        "description": "MD5 hash as defined in [RFC1321]"
                    },
                    "sha1": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA1 hash as defined in [RFC6234]"
                    },
                    "sha256": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA256 hash as defined in [RFC6234]"
                    }
                }
            },
            "Hostname": {
                "title": "OpenC2 Hostname",
                "type": "string",
                "description": "Internet host name as specified in [RFC1123]",
                "format": "hostname"
            },
            "L4-Protocol": {
                "title": "OpenC2 layer four protocol",
                "type": "string",
                "description": "Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value - [RFC5237]",
                "oneOf": [
                    {
                        "const": "icmp",
                        "description": "Internet Control Message Protocol - [RFC0792]"
                    },
                    {
                        "const": "tcp",
                        "description": "Transmission Control Protocol - [RFC0793]"
                    },
                    {
                        "const": "udp",
                        "description": "User Datagram Protocol - [RFC0768]"
                    },
                    {
                        "const": "sctp",
                        "description": "Stream Control Transmission Protocol - [RFC4960]"
                    }
                ]
            },
            "Nsid": {
                "title": "Namespace Identifier",
                "type": "string",
                "description": "A short identifier that refers to a namespace",
                "minLength": 1,
                "maxLength": 16
            },
            "Port": {
                "title": "OpenC2 Port",
                "type": "integer",
                "description": "Transport Protocol Port Number - [RFC6335]",
                "minimum": 0,
                "maximum": 65535
            },
            "Response-Type": {
                "title": "OpenC2 Response Type",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "No response"
                    },
                    {
                        "const": "ack",
                        "description": "Respond when Command received"
                    },
                    {
                        "const": "status",
                        "description": "Respond with progress toward Command completion"
                    },
                    {
                        "const": "complete",
                        "description": "Respond when all aspects of Command completed"
                    }
                ]
            },
            "Version": {
                "title": "OpenC2 Version",
                "type": "string",
                "description": "Major.Minor version number",
                "pattern": "^\\d+\\.\\d+$"
            },
            "Binary": {
                "title": "OpenC2 Binary",
                "type": "string",
                "contentEncoding": "base64"
            },
            "Command-ID": {
                "title": "OpenC2 Command Identifier",
                "type": "string"
            },
            "slpf:Args": {
                "title": "SLPF Args Specifiers",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "drop_process": {
                        "$ref": "#/definitions/slpf:Drop-Process",
                        "description": "Specifies how to handle denied packets"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart"
                    },
                    "direction": {
                        "$ref": "#/definitions/slpf:Direction",
                        "description": "Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both"
                    },
                    "insert_rule": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Specifies the identifier of the rule within a list, typically used in a top-down rule list"
                    }
                }
            },
            "slpf:Drop-Process": {
                "title": "SLPF drop process types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "Drop the packet and do not send a notification to the source of the packet"
                    },
                    {
                        "const": "reject",
                        "description": "Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet"
                    },
                    {
                        "const": "false_ack",
                        "description": "Drop the traffic and send a false acknowledgment"
                    }
                ]
            },
            "slpf:Direction": {
                "title": "SLPF direction types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "both",
                        "description": "Apply rules to all traffic"
                    },
                    {
                        "const": "ingress",
                        "description": "Apply rules to incoming traffic only"
                    },
                    {
                        "const": "egress",
                        "description": "Apply rules to outgoing traffic only"
                    }
                ]
            },
            "slpf:Rule-ID": {
                "title": "SLPF access rule identifier",
                "type": "integer",
                "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
            },
            "slpf:Actuator": {
                "title": "SLPF Actuator specifiers",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "hostname": {
                        "$ref": "#/definitions/Hostname",
                        "description": "[RFC1123] hostname (can be a domain name or IP address) for a particular device with SLPF functionality"
                    },
                    "named_group": {
                        "type": "string",
                        "description": "User defined collection of devices with SLPF functionality"
                    },
                    "asset_id": {
                        "type": "string",
                        "description": "Unique identifier for a particular SLPF"
                    },
                    "asset_tuple": {
                        "type": "array",
                        "description": "Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 10,
                        "items": {
                            "title": "SLPF asset tuple",
                            "type": "string"
                        }
                    }
                }
            },
            "slpf:Response": {
                "title": "SLPF response types",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Rule identifier returned from allow or deny Command"
                    }
                }
            }
        }
    }
}

{
    "actuator_id": "072fa8e5-a332-4560-a512-b5baef42acd3",
    "name": "Actuator 3",
    "device_id": "a4b7445f-2111-4b34-b2dc-bd9c59ef8de6",
    "profile_type": "slpf",
    "actuator_schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://oasis-open.org/openc2/oc2slpf/v1.0/schema.json",
        "title": "slpf",
        "description": "This schema is intended to validate all possible content for the OpenC2 Stateless Packet Filter version 1.0",
        "type": "object",
        "oneOf": [
            {
                "$ref": "#/definitions/OpenC2-Command",
                "description": "A message defined by an Action-Target pair that is sent from a Producer and received by a Consumer"
            },
            {
                "$ref": "#/definitions/OpenC2-Response",
                "description": "A message from a Consumer to a Producer acknowledging a Command or returning the requested resources or status to a previously received Command"
            }
        ],
        "definitions": {
            "OpenC2-Command": {
                "title": "OpenC2 Command",
                "type": "object",
                "description": "The Command defines an Action to be performed on a Target",
                "additionalProperties": false,
                "required": [
                    "action",
                    "target"
                ],
                "properties": {
                    "action": {
                        "$ref": "#/definitions/Action",
                        "description": "The task or activity to be performed (i.e., the 'verb')"
                    },
                    "target": {
                        "$ref": "#/definitions/Target",
                        "description": "The object of the Action. The Action is performed on the Target"
                    },
                    "args": {
                        "$ref": "#/definitions/Args",
                        "description": "Additional information that applies to the Command"
                    },
                    "actuator": {
                        "$ref": "#/definitions/Actuator",
                        "description": "The subject of the Action. The Actuator executes the Action on the Target"
                    },
                    "command_id": {
                        "$ref": "#/definitions/Command-ID",
                        "description": "An identifier of this Command"
                    }
                }
            },
            "OpenC2-Response": {
                "title": "OpenC2 Response",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "$ref": "#/definitions/Status-Code",
                        "description": "An integer status code"
                    },
                    "status_text": {
                        "type": "string",
                        "description": "A free-form human-readable description of the response status"
                    },
                    "results": {
                        "$ref": "#/definitions/Results",
                        "description": "Map of key:value pairs that contain additional results based on the invoking Command"
                    }
                }
            },
            "Action": {
                "title": "OpenC2 Action",
                "type": "string",
                "oneOf": [
                    {
                        "const": "query",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings"
                    },
                    {
                        "const": "deny",
                        "description": "Prevent traffic or access"
                    },
                    {
                        "const": "allow",
                        "description": "Permit traffic or access"
                    },
                    {
                        "const": "update",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update"
                    },
                    {
                        "const": "delete",
                        "description": "Remove an access rule"
                    }
                ]
            },
            "Target": {
                "title": "OpenC2 Target",
                "type": "object",
                "properties": {
                    "features": {
                        "$ref": "#/definitions/Features",
                        "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                    },
                    "file": {
                        "$ref": "#/definitions/File",
                        "description": "Properties of a file"
                    },
                    "ipv4_net": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                    },
                    "ipv6_net": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                    },
                    "ipv4_connection": {
                        "$ref": "#/definitions/IPv4-Connection",
                        "description": "a network connection as specified by a five-tuple (IPv4)"
                    },
                    "ipv6_connection": {
                        "$ref": "#/definitions/IPv6-Connection",
                        "description": "A network connection as specified by a five-tuple (IPv4)"
                    },
                    "slpf:rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                    }
                },
                "minProperties": 1,
                "maxProperties": 1,
                "additionalProperties": false
            },
            "Actuator": {
                "title": "OpenC2 Actuator",
                "type": "object",
                "properties": {
                    "slpf": {
                        "$ref": "#/definitions/slpf:Actuator",
                        "description": "Actuator specifiers defined in the Stateless Packet Filtering profile. A message can specify many Actuator types but for it to validate with this profile it must at least specify SLPF"
                    }
                },
                "required": [
                    "slpf"
                ],
                "additionalProperties": true
            },
            "Args": {
                "title": "OpenC2 Args",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "start_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to initiate the action"
                    },
                    "stop_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to terminate the action"
                    },
                    "duration": {
                        "$ref": "#/definitions/Duration",
                        "description": "The length of time for an action to be in effect"
                    },
                    "response_requested": {
                        "$ref": "#/definitions/Response-Type",
                        "description": "The type of Response required for the Command: none, ack, status, complete"
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Args",
                        "description": "Command arguments defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Status-Code": {
                "title": "OpenC2 Status Code",
                "type": "integer",
                "oneOf": [
                    {
                        "const": 102,
                        "description": "Processing - an interim response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it"
                    },
                    {
                        "const": 200,
                        "description": "OK - the Command has succeeded"
                    },
                    {
                        "const": 400,
                        "description": "Bad Request - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)"
                    },
                    {
                        "const": 500,
                        "description": "Internal Error - the Consumer encountered an unexpected condition that prevented it from performing the Command"
                    },
                    {
                        "const": 501,
                        "description": "Not Implemented - the Consumer does not support the functionality required to perform the Command"
                    }
                ]
            },
            "Results": {
                "title": "OpenC2 Response Results",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of OpenC2 language versions supported by this Actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Version"
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "description": "list of profiles supported by this actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Nsid"
                        }
                    },
                    "pairs": {
                        "$ref": "#/definitions/Action-Targets",
                        "description": "List of Targets applicable to each supported Action"
                    },
                    "rate_limit": {
                        "type": "number",
                        "description": "Maximum number of requests per minute supported by design or policy",
                        "minimum": 0
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Response",
                        "description": "Response types defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Features": {
                "title": "OpenC2 Features Items",
                "type": "array",
                "description": "An array of zero to ten names used to query an Actuator for its supported capabilities",
                "uniqueItems": true,
                "minItems": 0,
                "maxItems": 10,
                "items": {
                    "$ref": "#/definitions/Feature"
                }
            },
            "File": {
                "title": "OpenC2 File",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the file as defined in the file system"
                    },
                    "path": {
                        "type": "string",
                        "description": "The absolute path to the location of the file in the file system"
                    },
                    "hashes": {
                        "$ref": "#/definitions/Hashes",
                        "description": "One or more cryptographic hash codes of the file contents"
                    }
                }
            },
            "IPv4-Net": {
                "title": "OpenC2 IPv4 Net",
                "type": "string",
                "description": "IPv4 address as defined in [RFC0791] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])(\\/(3[0-2]|[0-2]?[0-9]))?"
            },
            "IPv4-Connection": {
                "title": "OpenC2 IPv4 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "IPv6-Net": {
                "title": "OpenC2 IPv6 Net",
                "type": "string",
                "description": "IPv6 address as defined in [RFC8200] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
            },
            "IPv6-Connection": {
                "title": "OpenC2 IPv6 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "Action-Targets": {
                "title": "OpenC2 Action Target Pairs",
                "type": "object",
                "description": "Map of each action supported by this Actuator to the list of Targets applicable to the specific Action",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "allow": {
                        "type": "array",
                        "description": "Permit traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "deny": {
                        "type": "array",
                        "description": "Prevent traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "query": {
                        "type": "array",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "features",
                                    "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                                }
                            ]
                        }
                    },
                    "delete": {
                        "type": "array",
                        "description": "Remove an access rule",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "slpf:rule_number",
                                    "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                                }
                            ]
                        }
                    },
                    "update": {
                        "type": "array",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "file",
                                    "description": "Properties of a file"
                                }
                            ]
                        }
                    }
                }
            },
            "Date-Time": {
                "title": "OpenC2 Date Time",
                "type": "integer",
                "description": "Date and Time - milliseconds since 00:00:00 UTC, 1 January 1970",
                "minimum": 0
            },
            "Duration": {
                "title": "OpenC2 Duration",
                "type": "integer",
                "description": "A length of time - number of milliseconds",
                "minimum": 0
            },
            "Feature": {
                "title": "OpenC2 Feature",
                "type": "string",
                "oneOf": [
                    {
                        "const": "versions",
                        "description": "List of OpenC2 Language versions supported by this Actuator"
                    },
                    {
                        "const": "profiles",
                        "description": "List of profiles supported by this Actuator"
                    },
                    {
                        "const": "pairs",
                        "description": "List of supported Actions and applicable Targets"
                    },
                    {
                        "const": "rate_limit",
                        "description": "Maximum number of Commands per minute supported by design or policy"
                    }
                ]
            },
            "Hashes": {
                "title": "OpenC2 Hashes",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "md5": {
                        "$ref": "#/definitions/Binary",
                        "description": "MD5 hash as defined in [RFC1321]"
                    },
                    "sha1": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA1 hash as defined in [RFC6234]"
                    },
                    "sha256": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA256 hash as defined in [RFC6234]"
                    }
                }
            },
            "Hostname": {
                "title": "OpenC2 Hostname",
                "type": "string",
                "description": "Internet host name as specified in [RFC1123]",
                "format": "hostname"
            },
            "L4-Protocol": {
                "title": "OpenC2 layer four protocol",
                "type": "string",
                "description": "Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value - [RFC5237]",
                "oneOf": [
                    {
                        "const": "icmp",
                        "description": "Internet Control Message Protocol - [RFC0792]"
                    },
                    {
                        "const": "tcp",
                        "description": "Transmission Control Protocol - [RFC0793]"
                    },
                    {
                        "const": "udp",
                        "description": "User Datagram Protocol - [RFC0768]"
                    },
                    {
                        "const": "sctp",
                        "description": "Stream Control Transmission Protocol - [RFC4960]"
                    }
                ]
            },
            "Nsid": {
                "title": "Namespace Identifier",
                "type": "string",
                "description": "A short identifier that refers to a namespace",
                "minLength": 1,
                "maxLength": 16
            },
            "Port": {
                "title": "OpenC2 Port",
                "type": "integer",
                "description": "Transport Protocol Port Number - [RFC6335]",
                "minimum": 0,
                "maximum": 65535
            },
            "Response-Type": {
                "title": "OpenC2 Response Type",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "No response"
                    },
                    {
                        "const": "ack",
                        "description": "Respond when Command received"
                    },
                    {
                        "const": "status",
                        "description": "Respond with progress toward Command completion"
                    },
                    {
                        "const": "complete",
                        "description": "Respond when all aspects of Command completed"
                    }
                ]
            },
            "Version": {
                "title": "OpenC2 Version",
                "type": "string",
                "description": "Major.Minor version number",
                "pattern": "^\\d+\\.\\d+$"
            },
            "Binary": {
                "title": "OpenC2 Binary",
                "type": "string",
                "contentEncoding": "base64"
            },
            "Command-ID": {
                "title": "OpenC2 Command Identifier",
                "type": "string"
            },
            "slpf:Args": {
                "title": "SLPF Args Specifiers",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "drop_process": {
                        "$ref": "#/definitions/slpf:Drop-Process",
                        "description": "Specifies how to handle denied packets"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart"
                    },
                    "direction": {
                        "$ref": "#/definitions/slpf:Direction",
                        "description": "Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both"
                    },
                    "insert_rule": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Specifies the identifier of the rule within a list, typically used in a top-down rule list"
                    }
                }
            },
            "slpf:Drop-Process": {
                "title": "SLPF drop process types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "Drop the packet and do not send a notification to the source of the packet"
                    },
                    {
                        "const": "reject",
                        "description": "Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet"
                    },
                    {
                        "const": "false_ack",
                        "description": "Drop the traffic and send a false acknowledgment"
                    }
                ]
            },
            "slpf:Direction": {
                "title": "SLPF direction types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "both",
                        "description": "Apply rules to all traffic"
                    },
                    {
                        "const": "ingress",
                        "description": "Apply rules to incoming traffic only"
                    },
                    {
                        "const": "egress",
                        "description": "Apply rules to outgoing traffic only"
                    }
                ]
            },
            "slpf:Rule-ID": {
                "title": "SLPF access rule identifier",
                "type": "integer",
                "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
            },
            "slpf:Actuator": {
                "title": "SLPF Actuator specifiers",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "hostname": {
                        "$ref": "#/definitions/Hostname",
                        "description": "[RFC1123] hostname (can be a domain name or IP address) for a particular device with SLPF functionality"
                    },
                    "named_group": {
                        "type": "string",
                        "description": "User defined collection of devices with SLPF functionality"
                    },
                    "asset_id": {
                        "type": "string",
                        "description": "Unique identifier for a particular SLPF"
                    },
                    "asset_tuple": {
                        "type": "array",
                        "description": "Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 10,
                        "items": {
                            "title": "SLPF asset tuple",
                            "type": "string"
                        }
                    }
                }
            },
            "slpf:Response": {
                "title": "SLPF response types",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Rule identifier returned from allow or deny Command"
                    }
                }
            }
        }
    }
}

{
    "actuator_id": "f097d86d-7e70-4668-840a-88e13864466d",
    "name": "Actuator 4",
    "device_id": "f3ddebb8-33b6-4d58-8c01-f439ecfa1b93",
    "profile_type": "slpf",
    "actuator_schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://oasis-open.org/openc2/oc2slpf/v1.0/schema.json",
        "title": "slpf",
        "description": "This schema is intended to validate all possible content for the OpenC2 Stateless Packet Filter version 1.0",
        "type": "object",
        "oneOf": [
            {
                "$ref": "#/definitions/OpenC2-Command",
                "description": "A message defined by an Action-Target pair that is sent from a Producer and received by a Consumer"
            },
            {
                "$ref": "#/definitions/OpenC2-Response",
                "description": "A message from a Consumer to a Producer acknowledging a Command or returning the requested resources or status to a previously received Command"
            }
        ],
        "definitions": {
            "OpenC2-Command": {
                "title": "OpenC2 Command",
                "type": "object",
                "description": "The Command defines an Action to be performed on a Target",
                "additionalProperties": false,
                "required": [
                    "action",
                    "target"
                ],
                "properties": {
                    "action": {
                        "$ref": "#/definitions/Action",
                        "description": "The task or activity to be performed (i.e., the 'verb')"
                    },
                    "target": {
                        "$ref": "#/definitions/Target",
                        "description": "The object of the Action. The Action is performed on the Target"
                    },
                    "args": {
                        "$ref": "#/definitions/Args",
                        "description": "Additional information that applies to the Command"
                    },
                    "actuator": {
                        "$ref": "#/definitions/Actuator",
                        "description": "The subject of the Action. The Actuator executes the Action on the Target"
                    },
                    "command_id": {
                        "$ref": "#/definitions/Command-ID",
                        "description": "An identifier of this Command"
                    }
                }
            },
            "OpenC2-Response": {
                "title": "OpenC2 Response",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "$ref": "#/definitions/Status-Code",
                        "description": "An integer status code"
                    },
                    "status_text": {
                        "type": "string",
                        "description": "A free-form human-readable description of the response status"
                    },
                    "results": {
                        "$ref": "#/definitions/Results",
                        "description": "Map of key:value pairs that contain additional results based on the invoking Command"
                    }
                }
            },
            "Action": {
                "title": "OpenC2 Action",
                "type": "string",
                "oneOf": [
                    {
                        "const": "query",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings"
                    },
                    {
                        "const": "deny",
                        "description": "Prevent traffic or access"
                    },
                    {
                        "const": "allow",
                        "description": "Permit traffic or access"
                    },
                    {
                        "const": "update",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update"
                    },
                    {
                        "const": "delete",
                        "description": "Remove an access rule"
                    }
                ]
            },
            "Target": {
                "title": "OpenC2 Target",
                "type": "object",
                "properties": {
                    "features": {
                        "$ref": "#/definitions/Features",
                        "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                    },
                    "file": {
                        "$ref": "#/definitions/File",
                        "description": "Properties of a file"
                    },
                    "ipv4_net": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                    },
                    "ipv6_net": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                    },
                    "ipv4_connection": {
                        "$ref": "#/definitions/IPv4-Connection",
                        "description": "a network connection as specified by a five-tuple (IPv4)"
                    },
                    "ipv6_connection": {
                        "$ref": "#/definitions/IPv6-Connection",
                        "description": "A network connection as specified by a five-tuple (IPv4)"
                    },
                    "slpf:rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                    }
                },
                "minProperties": 1,
                "maxProperties": 1,
                "additionalProperties": false
            },
            "Actuator": {
                "title": "OpenC2 Actuator",
                "type": "object",
                "properties": {
                    "slpf": {
                        "$ref": "#/definitions/slpf:Actuator",
                        "description": "Actuator specifiers defined in the Stateless Packet Filtering profile. A message can specify many Actuator types but for it to validate with this profile it must at least specify SLPF"
                    }
                },
                "required": [
                    "slpf"
                ],
                "additionalProperties": true
            },
            "Args": {
                "title": "OpenC2 Args",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "start_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to initiate the action"
                    },
                    "stop_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to terminate the action"
                    },
                    "duration": {
                        "$ref": "#/definitions/Duration",
                        "description": "The length of time for an action to be in effect"
                    },
                    "response_requested": {
                        "$ref": "#/definitions/Response-Type",
                        "description": "The type of Response required for the Command: none, ack, status, complete"
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Args",
                        "description": "Command arguments defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Status-Code": {
                "title": "OpenC2 Status Code",
                "type": "integer",
                "oneOf": [
                    {
                        "const": 102,
                        "description": "Processing - an interim response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it"
                    },
                    {
                        "const": 200,
                        "description": "OK - the Command has succeeded"
                    },
                    {
                        "const": 400,
                        "description": "Bad Request - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)"
                    },
                    {
                        "const": 500,
                        "description": "Internal Error - the Consumer encountered an unexpected condition that prevented it from performing the Command"
                    },
                    {
                        "const": 501,
                        "description": "Not Implemented - the Consumer does not support the functionality required to perform the Command"
                    }
                ]
            },
            "Results": {
                "title": "OpenC2 Response Results",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of OpenC2 language versions supported by this Actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Version"
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "description": "list of profiles supported by this actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Nsid"
                        }
                    },
                    "pairs": {
                        "$ref": "#/definitions/Action-Targets",
                        "description": "List of Targets applicable to each supported Action"
                    },
                    "rate_limit": {
                        "type": "number",
                        "description": "Maximum number of requests per minute supported by design or policy",
                        "minimum": 0
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Response",
                        "description": "Response types defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Features": {
                "title": "OpenC2 Features Items",
                "type": "array",
                "description": "An array of zero to ten names used to query an Actuator for its supported capabilities",
                "uniqueItems": true,
                "minItems": 0,
                "maxItems": 10,
                "items": {
                    "$ref": "#/definitions/Feature"
                }
            },
            "File": {
                "title": "OpenC2 File",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the file as defined in the file system"
                    },
                    "path": {
                        "type": "string",
                        "description": "The absolute path to the location of the file in the file system"
                    },
                    "hashes": {
                        "$ref": "#/definitions/Hashes",
                        "description": "One or more cryptographic hash codes of the file contents"
                    }
                }
            },
            "IPv4-Net": {
                "title": "OpenC2 IPv4 Net",
                "type": "string",
                "description": "IPv4 address as defined in [RFC0791] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])(\\/(3[0-2]|[0-2]?[0-9]))?"
            },
            "IPv4-Connection": {
                "title": "OpenC2 IPv4 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "IPv6-Net": {
                "title": "OpenC2 IPv6 Net",
                "type": "string",
                "description": "IPv6 address as defined in [RFC8200] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
            },
            "IPv6-Connection": {
                "title": "OpenC2 IPv6 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "Action-Targets": {
                "title": "OpenC2 Action Target Pairs",
                "type": "object",
                "description": "Map of each action supported by this Actuator to the list of Targets applicable to the specific Action",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "allow": {
                        "type": "array",
                        "description": "Permit traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "deny": {
                        "type": "array",
                        "description": "Prevent traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "query": {
                        "type": "array",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "features",
                                    "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                                }
                            ]
                        }
                    },
                    "delete": {
                        "type": "array",
                        "description": "Remove an access rule",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "slpf:rule_number",
                                    "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                                }
                            ]
                        }
                    },
                    "update": {
                        "type": "array",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "file",
                                    "description": "Properties of a file"
                                }
                            ]
                        }
                    }
                }
            },
            "Date-Time": {
                "title": "OpenC2 Date Time",
                "type": "integer",
                "description": "Date and Time - milliseconds since 00:00:00 UTC, 1 January 1970",
                "minimum": 0
            },
            "Duration": {
                "title": "OpenC2 Duration",
                "type": "integer",
                "description": "A length of time - number of milliseconds",
                "minimum": 0
            },
            "Feature": {
                "title": "OpenC2 Feature",
                "type": "string",
                "oneOf": [
                    {
                        "const": "versions",
                        "description": "List of OpenC2 Language versions supported by this Actuator"
                    },
                    {
                        "const": "profiles",
                        "description": "List of profiles supported by this Actuator"
                    },
                    {
                        "const": "pairs",
                        "description": "List of supported Actions and applicable Targets"
                    },
                    {
                        "const": "rate_limit",
                        "description": "Maximum number of Commands per minute supported by design or policy"
                    }
                ]
            },
            "Hashes": {
                "title": "OpenC2 Hashes",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "md5": {
                        "$ref": "#/definitions/Binary",
                        "description": "MD5 hash as defined in [RFC1321]"
                    },
                    "sha1": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA1 hash as defined in [RFC6234]"
                    },
                    "sha256": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA256 hash as defined in [RFC6234]"
                    }
                }
            },
            "Hostname": {
                "title": "OpenC2 Hostname",
                "type": "string",
                "description": "Internet host name as specified in [RFC1123]",
                "format": "hostname"
            },
            "L4-Protocol": {
                "title": "OpenC2 layer four protocol",
                "type": "string",
                "description": "Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value - [RFC5237]",
                "oneOf": [
                    {
                        "const": "icmp",
                        "description": "Internet Control Message Protocol - [RFC0792]"
                    },
                    {
                        "const": "tcp",
                        "description": "Transmission Control Protocol - [RFC0793]"
                    },
                    {
                        "const": "udp",
                        "description": "User Datagram Protocol - [RFC0768]"
                    },
                    {
                        "const": "sctp",
                        "description": "Stream Control Transmission Protocol - [RFC4960]"
                    }
                ]
            },
            "Nsid": {
                "title": "Namespace Identifier",
                "type": "string",
                "description": "A short identifier that refers to a namespace",
                "minLength": 1,
                "maxLength": 16
            },
            "Port": {
                "title": "OpenC2 Port",
                "type": "integer",
                "description": "Transport Protocol Port Number - [RFC6335]",
                "minimum": 0,
                "maximum": 65535
            },
            "Response-Type": {
                "title": "OpenC2 Response Type",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "No response"
                    },
                    {
                        "const": "ack",
                        "description": "Respond when Command received"
                    },
                    {
                        "const": "status",
                        "description": "Respond with progress toward Command completion"
                    },
                    {
                        "const": "complete",
                        "description": "Respond when all aspects of Command completed"
                    }
                ]
            },
            "Version": {
                "title": "OpenC2 Version",
                "type": "string",
                "description": "Major.Minor version number",
                "pattern": "^\\d+\\.\\d+$"
            },
            "Binary": {
                "title": "OpenC2 Binary",
                "type": "string",
                "contentEncoding": "base64"
            },
            "Command-ID": {
                "title": "OpenC2 Command Identifier",
                "type": "string"
            },
            "slpf:Args": {
                "title": "SLPF Args Specifiers",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "drop_process": {
                        "$ref": "#/definitions/slpf:Drop-Process",
                        "description": "Specifies how to handle denied packets"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart"
                    },
                    "direction": {
                        "$ref": "#/definitions/slpf:Direction",
                        "description": "Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both"
                    },
                    "insert_rule": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Specifies the identifier of the rule within a list, typically used in a top-down rule list"
                    }
                }
            },
            "slpf:Drop-Process": {
                "title": "SLPF drop process types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "Drop the packet and do not send a notification to the source of the packet"
                    },
                    {
                        "const": "reject",
                        "description": "Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet"
                    },
                    {
                        "const": "false_ack",
                        "description": "Drop the traffic and send a false acknowledgment"
                    }
                ]
            },
            "slpf:Direction": {
                "title": "SLPF direction types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "both",
                        "description": "Apply rules to all traffic"
                    },
                    {
                        "const": "ingress",
                        "description": "Apply rules to incoming traffic only"
                    },
                    {
                        "const": "egress",
                        "description": "Apply rules to outgoing traffic only"
                    }
                ]
            },
            "slpf:Rule-ID": {
                "title": "SLPF access rule identifier",
                "type": "integer",
                "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
            },
            "slpf:Actuator": {
                "title": "SLPF Actuator specifiers",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "hostname": {
                        "$ref": "#/definitions/Hostname",
                        "description": "[RFC1123] hostname (can be a domain name or IP address) for a particular device with SLPF functionality"
                    },
                    "named_group": {
                        "type": "string",
                        "description": "User defined collection of devices with SLPF functionality"
                    },
                    "asset_id": {
                        "type": "string",
                        "description": "Unique identifier for a particular SLPF"
                    },
                    "asset_tuple": {
                        "type": "array",
                        "description": "Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 10,
                        "items": {
                            "title": "SLPF asset tuple",
                            "type": "string"
                        }
                    }
                }
            },
            "slpf:Response": {
                "title": "SLPF response types",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Rule identifier returned from allow or deny Command"
                    }
                }
            }
        }
    }
}

{
    "actuator_id": "bfdc3421-2f5a-4995-ac83-d01ad0605be5",
    "name": "Actuator 5",
    "device_id": "aefa9153-5ec3-4524-a37d-712b9295f345",
    "profile_type": "slpf",
    "actuator_schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://oasis-open.org/openc2/oc2slpf/v1.0/schema.json",
        "title": "slpf",
        "description": "This schema is intended to validate all possible content for the OpenC2 Stateless Packet Filter version 1.0",
        "type": "object",
        "oneOf": [
            {
                "$ref": "#/definitions/OpenC2-Command",
                "description": "A message defined by an Action-Target pair that is sent from a Producer and received by a Consumer"
            },
            {
                "$ref": "#/definitions/OpenC2-Response",
                "description": "A message from a Consumer to a Producer acknowledging a Command or returning the requested resources or status to a previously received Command"
            }
        ],
        "definitions": {
            "OpenC2-Command": {
                "title": "OpenC2 Command",
                "type": "object",
                "description": "The Command defines an Action to be performed on a Target",
                "additionalProperties": false,
                "required": [
                    "action",
                    "target"
                ],
                "properties": {
                    "action": {
                        "$ref": "#/definitions/Action",
                        "description": "The task or activity to be performed (i.e., the 'verb')"
                    },
                    "target": {
                        "$ref": "#/definitions/Target",
                        "description": "The object of the Action. The Action is performed on the Target"
                    },
                    "args": {
                        "$ref": "#/definitions/Args",
                        "description": "Additional information that applies to the Command"
                    },
                    "actuator": {
                        "$ref": "#/definitions/Actuator",
                        "description": "The subject of the Action. The Actuator executes the Action on the Target"
                    },
                    "command_id": {
                        "$ref": "#/definitions/Command-ID",
                        "description": "An identifier of this Command"
                    }
                }
            },
            "OpenC2-Response": {
                "title": "OpenC2 Response",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "$ref": "#/definitions/Status-Code",
                        "description": "An integer status code"
                    },
                    "status_text": {
                        "type": "string",
                        "description": "A free-form human-readable description of the response status"
                    },
                    "results": {
                        "$ref": "#/definitions/Results",
                        "description": "Map of key:value pairs that contain additional results based on the invoking Command"
                    }
                }
            },
            "Action": {
                "title": "OpenC2 Action",
                "type": "string",
                "oneOf": [
                    {
                        "const": "query",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings"
                    },
                    {
                        "const": "deny",
                        "description": "Prevent traffic or access"
                    },
                    {
                        "const": "allow",
                        "description": "Permit traffic or access"
                    },
                    {
                        "const": "update",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update"
                    },
                    {
                        "const": "delete",
                        "description": "Remove an access rule"
                    }
                ]
            },
            "Target": {
                "title": "OpenC2 Target",
                "type": "object",
                "properties": {
                    "features": {
                        "$ref": "#/definitions/Features",
                        "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                    },
                    "file": {
                        "$ref": "#/definitions/File",
                        "description": "Properties of a file"
                    },
                    "ipv4_net": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                    },
                    "ipv6_net": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                    },
                    "ipv4_connection": {
                        "$ref": "#/definitions/IPv4-Connection",
                        "description": "a network connection as specified by a five-tuple (IPv4)"
                    },
                    "ipv6_connection": {
                        "$ref": "#/definitions/IPv6-Connection",
                        "description": "A network connection as specified by a five-tuple (IPv4)"
                    },
                    "slpf:rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                    }
                },
                "minProperties": 1,
                "maxProperties": 1,
                "additionalProperties": false
            },
            "Actuator": {
                "title": "OpenC2 Actuator",
                "type": "object",
                "properties": {
                    "slpf": {
                        "$ref": "#/definitions/slpf:Actuator",
                        "description": "Actuator specifiers defined in the Stateless Packet Filtering profile. A message can specify many Actuator types but for it to validate with this profile it must at least specify SLPF"
                    }
                },
                "required": [
                    "slpf"
                ],
                "additionalProperties": true
            },
            "Args": {
                "title": "OpenC2 Args",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "start_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to initiate the action"
                    },
                    "stop_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to terminate the action"
                    },
                    "duration": {
                        "$ref": "#/definitions/Duration",
                        "description": "The length of time for an action to be in effect"
                    },
                    "response_requested": {
                        "$ref": "#/definitions/Response-Type",
                        "description": "The type of Response required for the Command: none, ack, status, complete"
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Args",
                        "description": "Command arguments defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Status-Code": {
                "title": "OpenC2 Status Code",
                "type": "integer",
                "oneOf": [
                    {
                        "const": 102,
                        "description": "Processing - an interim response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it"
                    },
                    {
                        "const": 200,
                        "description": "OK - the Command has succeeded"
                    },
                    {
                        "const": 400,
                        "description": "Bad Request - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)"
                    },
                    {
                        "const": 500,
                        "description": "Internal Error - the Consumer encountered an unexpected condition that prevented it from performing the Command"
                    },
                    {
                        "const": 501,
                        "description": "Not Implemented - the Consumer does not support the functionality required to perform the Command"
                    }
                ]
            },
            "Results": {
                "title": "OpenC2 Response Results",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of OpenC2 language versions supported by this Actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Version"
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "description": "list of profiles supported by this actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Nsid"
                        }
                    },
                    "pairs": {
                        "$ref": "#/definitions/Action-Targets",
                        "description": "List of Targets applicable to each supported Action"
                    },
                    "rate_limit": {
                        "type": "number",
                        "description": "Maximum number of requests per minute supported by design or policy",
                        "minimum": 0
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Response",
                        "description": "Response types defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Features": {
                "title": "OpenC2 Features Items",
                "type": "array",
                "description": "An array of zero to ten names used to query an Actuator for its supported capabilities",
                "uniqueItems": true,
                "minItems": 0,
                "maxItems": 10,
                "items": {
                    "$ref": "#/definitions/Feature"
                }
            },
            "File": {
                "title": "OpenC2 File",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the file as defined in the file system"
                    },
                    "path": {
                        "type": "string",
                        "description": "The absolute path to the location of the file in the file system"
                    },
                    "hashes": {
                        "$ref": "#/definitions/Hashes",
                        "description": "One or more cryptographic hash codes of the file contents"
                    }
                }
            },
            "IPv4-Net": {
                "title": "OpenC2 IPv4 Net",
                "type": "string",
                "description": "IPv4 address as defined in [RFC0791] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])(\\/(3[0-2]|[0-2]?[0-9]))?"
            },
            "IPv4-Connection": {
                "title": "OpenC2 IPv4 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "IPv6-Net": {
                "title": "OpenC2 IPv6 Net",
                "type": "string",
                "description": "IPv6 address as defined in [RFC8200] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
            },
            "IPv6-Connection": {
                "title": "OpenC2 IPv6 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "Action-Targets": {
                "title": "OpenC2 Action Target Pairs",
                "type": "object",
                "description": "Map of each action supported by this Actuator to the list of Targets applicable to the specific Action",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "allow": {
                        "type": "array",
                        "description": "Permit traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "deny": {
                        "type": "array",
                        "description": "Prevent traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "query": {
                        "type": "array",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "features",
                                    "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                                }
                            ]
                        }
                    },
                    "delete": {
                        "type": "array",
                        "description": "Remove an access rule",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "slpf:rule_number",
                                    "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                                }
                            ]
                        }
                    },
                    "update": {
                        "type": "array",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "file",
                                    "description": "Properties of a file"
                                }
                            ]
                        }
                    }
                }
            },
            "Date-Time": {
                "title": "OpenC2 Date Time",
                "type": "integer",
                "description": "Date and Time - milliseconds since 00:00:00 UTC, 1 January 1970",
                "minimum": 0
            },
            "Duration": {
                "title": "OpenC2 Duration",
                "type": "integer",
                "description": "A length of time - number of milliseconds",
                "minimum": 0
            },
            "Feature": {
                "title": "OpenC2 Feature",
                "type": "string",
                "oneOf": [
                    {
                        "const": "versions",
                        "description": "List of OpenC2 Language versions supported by this Actuator"
                    },
                    {
                        "const": "profiles",
                        "description": "List of profiles supported by this Actuator"
                    },
                    {
                        "const": "pairs",
                        "description": "List of supported Actions and applicable Targets"
                    },
                    {
                        "const": "rate_limit",
                        "description": "Maximum number of Commands per minute supported by design or policy"
                    }
                ]
            },
            "Hashes": {
                "title": "OpenC2 Hashes",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "md5": {
                        "$ref": "#/definitions/Binary",
                        "description": "MD5 hash as defined in [RFC1321]"
                    },
                    "sha1": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA1 hash as defined in [RFC6234]"
                    },
                    "sha256": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA256 hash as defined in [RFC6234]"
                    }
                }
            },
            "Hostname": {
                "title": "OpenC2 Hostname",
                "type": "string",
                "description": "Internet host name as specified in [RFC1123]",
                "format": "hostname"
            },
            "L4-Protocol": {
                "title": "OpenC2 layer four protocol",
                "type": "string",
                "description": "Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value - [RFC5237]",
                "oneOf": [
                    {
                        "const": "icmp",
                        "description": "Internet Control Message Protocol - [RFC0792]"
                    },
                    {
                        "const": "tcp",
                        "description": "Transmission Control Protocol - [RFC0793]"
                    },
                    {
                        "const": "udp",
                        "description": "User Datagram Protocol - [RFC0768]"
                    },
                    {
                        "const": "sctp",
                        "description": "Stream Control Transmission Protocol - [RFC4960]"
                    }
                ]
            },
            "Nsid": {
                "title": "Namespace Identifier",
                "type": "string",
                "description": "A short identifier that refers to a namespace",
                "minLength": 1,
                "maxLength": 16
            },
            "Port": {
                "title": "OpenC2 Port",
                "type": "integer",
                "description": "Transport Protocol Port Number - [RFC6335]",
                "minimum": 0,
                "maximum": 65535
            },
            "Response-Type": {
                "title": "OpenC2 Response Type",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "No response"
                    },
                    {
                        "const": "ack",
                        "description": "Respond when Command received"
                    },
                    {
                        "const": "status",
                        "description": "Respond with progress toward Command completion"
                    },
                    {
                        "const": "complete",
                        "description": "Respond when all aspects of Command completed"
                    }
                ]
            },
            "Version": {
                "title": "OpenC2 Version",
                "type": "string",
                "description": "Major.Minor version number",
                "pattern": "^\\d+\\.\\d+$"
            },
            "Binary": {
                "title": "OpenC2 Binary",
                "type": "string",
                "contentEncoding": "base64"
            },
            "Command-ID": {
                "title": "OpenC2 Command Identifier",
                "type": "string"
            },
            "slpf:Args": {
                "title": "SLPF Args Specifiers",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "drop_process": {
                        "$ref": "#/definitions/slpf:Drop-Process",
                        "description": "Specifies how to handle denied packets"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart"
                    },
                    "direction": {
                        "$ref": "#/definitions/slpf:Direction",
                        "description": "Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both"
                    },
                    "insert_rule": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Specifies the identifier of the rule within a list, typically used in a top-down rule list"
                    }
                }
            },
            "slpf:Drop-Process": {
                "title": "SLPF drop process types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "Drop the packet and do not send a notification to the source of the packet"
                    },
                    {
                        "const": "reject",
                        "description": "Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet"
                    },
                    {
                        "const": "false_ack",
                        "description": "Drop the traffic and send a false acknowledgment"
                    }
                ]
            },
            "slpf:Direction": {
                "title": "SLPF direction types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "both",
                        "description": "Apply rules to all traffic"
                    },
                    {
                        "const": "ingress",
                        "description": "Apply rules to incoming traffic only"
                    },
                    {
                        "const": "egress",
                        "description": "Apply rules to outgoing traffic only"
                    }
                ]
            },
            "slpf:Rule-ID": {
                "title": "SLPF access rule identifier",
                "type": "integer",
                "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
            },
            "slpf:Actuator": {
                "title": "SLPF Actuator specifiers",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "hostname": {
                        "$ref": "#/definitions/Hostname",
                        "description": "[RFC1123] hostname (can be a domain name or IP address) for a particular device with SLPF functionality"
                    },
                    "named_group": {
                        "type": "string",
                        "description": "User defined collection of devices with SLPF functionality"
                    },
                    "asset_id": {
                        "type": "string",
                        "description": "Unique identifier for a particular SLPF"
                    },
                    "asset_tuple": {
                        "type": "array",
                        "description": "Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 10,
                        "items": {
                            "title": "SLPF asset tuple",
                            "type": "string"
                        }
                    }
                }
            },
            "slpf:Response": {
                "title": "SLPF response types",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Rule identifier returned from allow or deny Command"
                    }
                }
            }
        }
    }
}

{
    "actuator_id": "ec296bb6-eb8d-4c8f-b4cb-ebd7381ca64f",
    "name": "Actuator 6",
    "device_id": "2c24e4f1-993f-4a66-a3b6-be98706ab8b4",
    "profile_type": "slpf",
    "actuator_schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://oasis-open.org/openc2/oc2slpf/v1.0/schema.json",
        "title": "slpf",
        "description": "This schema is intended to validate all possible content for the OpenC2 Stateless Packet Filter version 1.0",
        "type": "object",
        "oneOf": [
            {
                "$ref": "#/definitions/OpenC2-Command",
                "description": "A message defined by an Action-Target pair that is sent from a Producer and received by a Consumer"
            },
            {
                "$ref": "#/definitions/OpenC2-Response",
                "description": "A message from a Consumer to a Producer acknowledging a Command or returning the requested resources or status to a previously received Command"
            }
        ],
        "definitions": {
            "OpenC2-Command": {
                "title": "OpenC2 Command",
                "type": "object",
                "description": "The Command defines an Action to be performed on a Target",
                "additionalProperties": false,
                "required": [
                    "action",
                    "target"
                ],
                "properties": {
                    "action": {
                        "$ref": "#/definitions/Action",
                        "description": "The task or activity to be performed (i.e., the 'verb')"
                    },
                    "target": {
                        "$ref": "#/definitions/Target",
                        "description": "The object of the Action. The Action is performed on the Target"
                    },
                    "args": {
                        "$ref": "#/definitions/Args",
                        "description": "Additional information that applies to the Command"
                    },
                    "actuator": {
                        "$ref": "#/definitions/Actuator",
                        "description": "The subject of the Action. The Actuator executes the Action on the Target"
                    },
                    "command_id": {
                        "$ref": "#/definitions/Command-ID",
                        "description": "An identifier of this Command"
                    }
                }
            },
            "OpenC2-Response": {
                "title": "OpenC2 Response",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "$ref": "#/definitions/Status-Code",
                        "description": "An integer status code"
                    },
                    "status_text": {
                        "type": "string",
                        "description": "A free-form human-readable description of the response status"
                    },
                    "results": {
                        "$ref": "#/definitions/Results",
                        "description": "Map of key:value pairs that contain additional results based on the invoking Command"
                    }
                }
            },
            "Action": {
                "title": "OpenC2 Action",
                "type": "string",
                "oneOf": [
                    {
                        "const": "query",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings"
                    },
                    {
                        "const": "deny",
                        "description": "Prevent traffic or access"
                    },
                    {
                        "const": "allow",
                        "description": "Permit traffic or access"
                    },
                    {
                        "const": "update",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update"
                    },
                    {
                        "const": "delete",
                        "description": "Remove an access rule"
                    }
                ]
            },
            "Target": {
                "title": "OpenC2 Target",
                "type": "object",
                "properties": {
                    "features": {
                        "$ref": "#/definitions/Features",
                        "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                    },
                    "file": {
                        "$ref": "#/definitions/File",
                        "description": "Properties of a file"
                    },
                    "ipv4_net": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                    },
                    "ipv6_net": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                    },
                    "ipv4_connection": {
                        "$ref": "#/definitions/IPv4-Connection",
                        "description": "a network connection as specified by a five-tuple (IPv4)"
                    },
                    "ipv6_connection": {
                        "$ref": "#/definitions/IPv6-Connection",
                        "description": "A network connection as specified by a five-tuple (IPv4)"
                    },
                    "slpf:rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                    }
                },
                "minProperties": 1,
                "maxProperties": 1,
                "additionalProperties": false
            },
            "Actuator": {
                "title": "OpenC2 Actuator",
                "type": "object",
                "properties": {
                    "slpf": {
                        "$ref": "#/definitions/slpf:Actuator",
                        "description": "Actuator specifiers defined in the Stateless Packet Filtering profile. A message can specify many Actuator types but for it to validate with this profile it must at least specify SLPF"
                    }
                },
                "required": [
                    "slpf"
                ],
                "additionalProperties": true
            },
            "Args": {
                "title": "OpenC2 Args",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "start_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to initiate the action"
                    },
                    "stop_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to terminate the action"
                    },
                    "duration": {
                        "$ref": "#/definitions/Duration",
                        "description": "The length of time for an action to be in effect"
                    },
                    "response_requested": {
                        "$ref": "#/definitions/Response-Type",
                        "description": "The type of Response required for the Command: none, ack, status, complete"
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Args",
                        "description": "Command arguments defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Status-Code": {
                "title": "OpenC2 Status Code",
                "type": "integer",
                "oneOf": [
                    {
                        "const": 102,
                        "description": "Processing - an interim response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it"
                    },
                    {
                        "const": 200,
                        "description": "OK - the Command has succeeded"
                    },
                    {
                        "const": 400,
                        "description": "Bad Request - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)"
                    },
                    {
                        "const": 500,
                        "description": "Internal Error - the Consumer encountered an unexpected condition that prevented it from performing the Command"
                    },
                    {
                        "const": 501,
                        "description": "Not Implemented - the Consumer does not support the functionality required to perform the Command"
                    }
                ]
            },
            "Results": {
                "title": "OpenC2 Response Results",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of OpenC2 language versions supported by this Actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Version"
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "description": "list of profiles supported by this actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Nsid"
                        }
                    },
                    "pairs": {
                        "$ref": "#/definitions/Action-Targets",
                        "description": "List of Targets applicable to each supported Action"
                    },
                    "rate_limit": {
                        "type": "number",
                        "description": "Maximum number of requests per minute supported by design or policy",
                        "minimum": 0
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Response",
                        "description": "Response types defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Features": {
                "title": "OpenC2 Features Items",
                "type": "array",
                "description": "An array of zero to ten names used to query an Actuator for its supported capabilities",
                "uniqueItems": true,
                "minItems": 0,
                "maxItems": 10,
                "items": {
                    "$ref": "#/definitions/Feature"
                }
            },
            "File": {
                "title": "OpenC2 File",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the file as defined in the file system"
                    },
                    "path": {
                        "type": "string",
                        "description": "The absolute path to the location of the file in the file system"
                    },
                    "hashes": {
                        "$ref": "#/definitions/Hashes",
                        "description": "One or more cryptographic hash codes of the file contents"
                    }
                }
            },
            "IPv4-Net": {
                "title": "OpenC2 IPv4 Net",
                "type": "string",
                "description": "IPv4 address as defined in [RFC0791] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])(\\/(3[0-2]|[0-2]?[0-9]))?"
            },
            "IPv4-Connection": {
                "title": "OpenC2 IPv4 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "IPv6-Net": {
                "title": "OpenC2 IPv6 Net",
                "type": "string",
                "description": "IPv6 address as defined in [RFC8200] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
            },
            "IPv6-Connection": {
                "title": "OpenC2 IPv6 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "Action-Targets": {
                "title": "OpenC2 Action Target Pairs",
                "type": "object",
                "description": "Map of each action supported by this Actuator to the list of Targets applicable to the specific Action",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "allow": {
                        "type": "array",
                        "description": "Permit traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "deny": {
                        "type": "array",
                        "description": "Prevent traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "query": {
                        "type": "array",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "features",
                                    "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                                }
                            ]
                        }
                    },
                    "delete": {
                        "type": "array",
                        "description": "Remove an access rule",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "slpf:rule_number",
                                    "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                                }
                            ]
                        }
                    },
                    "update": {
                        "type": "array",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "file",
                                    "description": "Properties of a file"
                                }
                            ]
                        }
                    }
                }
            },
            "Date-Time": {
                "title": "OpenC2 Date Time",
                "type": "integer",
                "description": "Date and Time - milliseconds since 00:00:00 UTC, 1 January 1970",
                "minimum": 0
            },
            "Duration": {
                "title": "OpenC2 Duration",
                "type": "integer",
                "description": "A length of time - number of milliseconds",
                "minimum": 0
            },
            "Feature": {
                "title": "OpenC2 Feature",
                "type": "string",
                "oneOf": [
                    {
                        "const": "versions",
                        "description": "List of OpenC2 Language versions supported by this Actuator"
                    },
                    {
                        "const": "profiles",
                        "description": "List of profiles supported by this Actuator"
                    },
                    {
                        "const": "pairs",
                        "description": "List of supported Actions and applicable Targets"
                    },
                    {
                        "const": "rate_limit",
                        "description": "Maximum number of Commands per minute supported by design or policy"
                    }
                ]
            },
            "Hashes": {
                "title": "OpenC2 Hashes",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "md5": {
                        "$ref": "#/definitions/Binary",
                        "description": "MD5 hash as defined in [RFC1321]"
                    },
                    "sha1": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA1 hash as defined in [RFC6234]"
                    },
                    "sha256": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA256 hash as defined in [RFC6234]"
                    }
                }
            },
            "Hostname": {
                "title": "OpenC2 Hostname",
                "type": "string",
                "description": "Internet host name as specified in [RFC1123]",
                "format": "hostname"
            },
            "L4-Protocol": {
                "title": "OpenC2 layer four protocol",
                "type": "string",
                "description": "Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value - [RFC5237]",
                "oneOf": [
                    {
                        "const": "icmp",
                        "description": "Internet Control Message Protocol - [RFC0792]"
                    },
                    {
                        "const": "tcp",
                        "description": "Transmission Control Protocol - [RFC0793]"
                    },
                    {
                        "const": "udp",
                        "description": "User Datagram Protocol - [RFC0768]"
                    },
                    {
                        "const": "sctp",
                        "description": "Stream Control Transmission Protocol - [RFC4960]"
                    }
                ]
            },
            "Nsid": {
                "title": "Namespace Identifier",
                "type": "string",
                "description": "A short identifier that refers to a namespace",
                "minLength": 1,
                "maxLength": 16
            },
            "Port": {
                "title": "OpenC2 Port",
                "type": "integer",
                "description": "Transport Protocol Port Number - [RFC6335]",
                "minimum": 0,
                "maximum": 65535
            },
            "Response-Type": {
                "title": "OpenC2 Response Type",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "No response"
                    },
                    {
                        "const": "ack",
                        "description": "Respond when Command received"
                    },
                    {
                        "const": "status",
                        "description": "Respond with progress toward Command completion"
                    },
                    {
                        "const": "complete",
                        "description": "Respond when all aspects of Command completed"
                    }
                ]
            },
            "Version": {
                "title": "OpenC2 Version",
                "type": "string",
                "description": "Major.Minor version number",
                "pattern": "^\\d+\\.\\d+$"
            },
            "Binary": {
                "title": "OpenC2 Binary",
                "type": "string",
                "contentEncoding": "base64"
            },
            "Command-ID": {
                "title": "OpenC2 Command Identifier",
                "type": "string"
            },
            "slpf:Args": {
                "title": "SLPF Args Specifiers",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "drop_process": {
                        "$ref": "#/definitions/slpf:Drop-Process",
                        "description": "Specifies how to handle denied packets"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart"
                    },
                    "direction": {
                        "$ref": "#/definitions/slpf:Direction",
                        "description": "Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both"
                    },
                    "insert_rule": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Specifies the identifier of the rule within a list, typically used in a top-down rule list"
                    }
                }
            },
            "slpf:Drop-Process": {
                "title": "SLPF drop process types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "Drop the packet and do not send a notification to the source of the packet"
                    },
                    {
                        "const": "reject",
                        "description": "Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet"
                    },
                    {
                        "const": "false_ack",
                        "description": "Drop the traffic and send a false acknowledgment"
                    }
                ]
            },
            "slpf:Direction": {
                "title": "SLPF direction types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "both",
                        "description": "Apply rules to all traffic"
                    },
                    {
                        "const": "ingress",
                        "description": "Apply rules to incoming traffic only"
                    },
                    {
                        "const": "egress",
                        "description": "Apply rules to outgoing traffic only"
                    }
                ]
            },
            "slpf:Rule-ID": {
                "title": "SLPF access rule identifier",
                "type": "integer",
                "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
            },
            "slpf:Actuator": {
                "title": "SLPF Actuator specifiers",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "hostname": {
                        "$ref": "#/definitions/Hostname",
                        "description": "[RFC1123] hostname (can be a domain name or IP address) for a particular device with SLPF functionality"
                    },
                    "named_group": {
                        "type": "string",
                        "description": "User defined collection of devices with SLPF functionality"
                    },
                    "asset_id": {
                        "type": "string",
                        "description": "Unique identifier for a particular SLPF"
                    },
                    "asset_tuple": {
                        "type": "array",
                        "description": "Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 10,
                        "items": {
                            "title": "SLPF asset tuple",
                            "type": "string"
                        }
                    }
                }
            },
            "slpf:Response": {
                "title": "SLPF response types",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Rule identifier returned from allow or deny Command"
                    }
                }
            }
        }
    }
}

{
    "actuator_id": "fbe8fd9e-9212-416e-bdbf-5b3f776cb7a4",
    "name": "Actuator 7",
    "device_id": "47b70ceb-cb6f-48be-8664-1a474b86f1f0",
    "profile_type": "slpf",
    "actuator_schema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$id": "http://oasis-open.org/openc2/oc2slpf/v1.0/schema.json",
        "title": "slpf",
        "description": "This schema is intended to validate all possible content for the OpenC2 Stateless Packet Filter version 1.0",
        "type": "object",
        "oneOf": [
            {
                "$ref": "#/definitions/OpenC2-Command",
                "description": "A message defined by an Action-Target pair that is sent from a Producer and received by a Consumer"
            },
            {
                "$ref": "#/definitions/OpenC2-Response",
                "description": "A message from a Consumer to a Producer acknowledging a Command or returning the requested resources or status to a previously received Command"
            }
        ],
        "definitions": {
            "OpenC2-Command": {
                "title": "OpenC2 Command",
                "type": "object",
                "description": "The Command defines an Action to be performed on a Target",
                "additionalProperties": false,
                "required": [
                    "action",
                    "target"
                ],
                "properties": {
                    "action": {
                        "$ref": "#/definitions/Action",
                        "description": "The task or activity to be performed (i.e., the 'verb')"
                    },
                    "target": {
                        "$ref": "#/definitions/Target",
                        "description": "The object of the Action. The Action is performed on the Target"
                    },
                    "args": {
                        "$ref": "#/definitions/Args",
                        "description": "Additional information that applies to the Command"
                    },
                    "actuator": {
                        "$ref": "#/definitions/Actuator",
                        "description": "The subject of the Action. The Actuator executes the Action on the Target"
                    },
                    "command_id": {
                        "$ref": "#/definitions/Command-ID",
                        "description": "An identifier of this Command"
                    }
                }
            },
            "OpenC2-Response": {
                "title": "OpenC2 Response",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "$ref": "#/definitions/Status-Code",
                        "description": "An integer status code"
                    },
                    "status_text": {
                        "type": "string",
                        "description": "A free-form human-readable description of the response status"
                    },
                    "results": {
                        "$ref": "#/definitions/Results",
                        "description": "Map of key:value pairs that contain additional results based on the invoking Command"
                    }
                }
            },
            "Action": {
                "title": "OpenC2 Action",
                "type": "string",
                "oneOf": [
                    {
                        "const": "query",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings"
                    },
                    {
                        "const": "deny",
                        "description": "Prevent traffic or access"
                    },
                    {
                        "const": "allow",
                        "description": "Permit traffic or access"
                    },
                    {
                        "const": "update",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update"
                    },
                    {
                        "const": "delete",
                        "description": "Remove an access rule"
                    }
                ]
            },
            "Target": {
                "title": "OpenC2 Target",
                "type": "object",
                "properties": {
                    "features": {
                        "$ref": "#/definitions/Features",
                        "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                    },
                    "file": {
                        "$ref": "#/definitions/File",
                        "description": "Properties of a file"
                    },
                    "ipv4_net": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                    },
                    "ipv6_net": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                    },
                    "ipv4_connection": {
                        "$ref": "#/definitions/IPv4-Connection",
                        "description": "a network connection as specified by a five-tuple (IPv4)"
                    },
                    "ipv6_connection": {
                        "$ref": "#/definitions/IPv6-Connection",
                        "description": "A network connection as specified by a five-tuple (IPv4)"
                    },
                    "slpf:rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                    }
                },
                "minProperties": 1,
                "maxProperties": 1,
                "additionalProperties": false
            },
            "Actuator": {
                "title": "OpenC2 Actuator",
                "type": "object",
                "properties": {
                    "slpf": {
                        "$ref": "#/definitions/slpf:Actuator",
                        "description": "Actuator specifiers defined in the Stateless Packet Filtering profile. A message can specify many Actuator types but for it to validate with this profile it must at least specify SLPF"
                    }
                },
                "required": [
                    "slpf"
                ],
                "additionalProperties": true
            },
            "Args": {
                "title": "OpenC2 Args",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "start_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to initiate the action"
                    },
                    "stop_time": {
                        "$ref": "#/definitions/Date-Time",
                        "description": "The specific date/time to terminate the action"
                    },
                    "duration": {
                        "$ref": "#/definitions/Duration",
                        "description": "The length of time for an action to be in effect"
                    },
                    "response_requested": {
                        "$ref": "#/definitions/Response-Type",
                        "description": "The type of Response required for the Command: none, ack, status, complete"
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Args",
                        "description": "Command arguments defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Status-Code": {
                "title": "OpenC2 Status Code",
                "type": "integer",
                "oneOf": [
                    {
                        "const": 102,
                        "description": "Processing - an interim response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it"
                    },
                    {
                        "const": 200,
                        "description": "OK - the Command has succeeded"
                    },
                    {
                        "const": 400,
                        "description": "Bad Request - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)"
                    },
                    {
                        "const": 500,
                        "description": "Internal Error - the Consumer encountered an unexpected condition that prevented it from performing the Command"
                    },
                    {
                        "const": 501,
                        "description": "Not Implemented - the Consumer does not support the functionality required to perform the Command"
                    }
                ]
            },
            "Results": {
                "title": "OpenC2 Response Results",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of OpenC2 language versions supported by this Actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Version"
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "description": "list of profiles supported by this actuator",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "$ref": "#/definitions/Nsid"
                        }
                    },
                    "pairs": {
                        "$ref": "#/definitions/Action-Targets",
                        "description": "List of Targets applicable to each supported Action"
                    },
                    "rate_limit": {
                        "type": "number",
                        "description": "Maximum number of requests per minute supported by design or policy",
                        "minimum": 0
                    },
                    "slpf": {
                        "$ref": "#/definitions/slpf:Response",
                        "description": "Response types defined in the Stateless Packet Filter profile"
                    }
                }
            },
            "Features": {
                "title": "OpenC2 Features Items",
                "type": "array",
                "description": "An array of zero to ten names used to query an Actuator for its supported capabilities",
                "uniqueItems": true,
                "minItems": 0,
                "maxItems": 10,
                "items": {
                    "$ref": "#/definitions/Feature"
                }
            },
            "File": {
                "title": "OpenC2 File",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the file as defined in the file system"
                    },
                    "path": {
                        "type": "string",
                        "description": "The absolute path to the location of the file in the file system"
                    },
                    "hashes": {
                        "$ref": "#/definitions/Hashes",
                        "description": "One or more cryptographic hash codes of the file contents"
                    }
                }
            },
            "IPv4-Net": {
                "title": "OpenC2 IPv4 Net",
                "type": "string",
                "description": "IPv4 address as defined in [RFC0791] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])(\\/(3[0-2]|[0-2]?[0-9]))?"
            },
            "IPv4-Connection": {
                "title": "OpenC2 IPv4 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv4-Net",
                        "description": "IPv4 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "IPv6-Net": {
                "title": "OpenC2 IPv6 Net",
                "type": "string",
                "description": "IPv6 address as defined in [RFC8200] - CIDR prefix-length. If omitted, refers to a single host address",
                "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
            },
            "IPv6-Connection": {
                "title": "OpenC2 IPv6 Connection",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "src_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 source address range"
                    },
                    "src_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Source service per [RFC6335]"
                    },
                    "dst_addr": {
                        "$ref": "#/definitions/IPv6-Net",
                        "description": "IPv6 destination address range"
                    },
                    "dst_port": {
                        "$ref": "#/definitions/Port",
                        "description": "Destination service per [RFC6335]"
                    },
                    "protocol": {
                        "$ref": "#/definitions/L4-Protocol",
                        "description": "Layer 4 protocol (e.g., TCP) - see L4-Protocol section"
                    }
                }
            },
            "Action-Targets": {
                "title": "OpenC2 Action Target Pairs",
                "type": "object",
                "description": "Map of each action supported by this Actuator to the list of Targets applicable to the specific Action",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "allow": {
                        "type": "array",
                        "description": "Permit traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "deny": {
                        "type": "array",
                        "description": "Prevent traffic or access",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "ipv4_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv4)"
                                },
                                {
                                    "const": "ipv6_connection",
                                    "description": "A network connection as specified by a five-tuple (IPv6)"
                                },
                                {
                                    "const": "ipv4_net",
                                    "description": "The representation of one or more IPv4 addresses expressed using CIDR notation"
                                },
                                {
                                    "const": "ipv6_net",
                                    "description": "The representation of one or more IPv6 addresses expressed using CIDR notation"
                                }
                            ]
                        }
                    },
                    "query": {
                        "type": "array",
                        "description": "Initiate a request for information. Used to communicate the supported options and determine the state or settings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "features",
                                    "description": "A set of items such as Action/Target pairs, profiles versions, options that are supported by the Actuator. The Target is used with the query Action to determine an Actuator's capabilities"
                                }
                            ]
                        }
                    },
                    "delete": {
                        "type": "array",
                        "description": "Remove an access rule",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "slpf:rule_number",
                                    "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
                                }
                            ]
                        }
                    },
                    "update": {
                        "type": "array",
                        "description": "Instructs the Actuator to update its configuration by retrieving and processing a configuration file and update",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                            "type": "string",
                            "oneOf": [
                                {
                                    "const": "file",
                                    "description": "Properties of a file"
                                }
                            ]
                        }
                    }
                }
            },
            "Date-Time": {
                "title": "OpenC2 Date Time",
                "type": "integer",
                "description": "Date and Time - milliseconds since 00:00:00 UTC, 1 January 1970",
                "minimum": 0
            },
            "Duration": {
                "title": "OpenC2 Duration",
                "type": "integer",
                "description": "A length of time - number of milliseconds",
                "minimum": 0
            },
            "Feature": {
                "title": "OpenC2 Feature",
                "type": "string",
                "oneOf": [
                    {
                        "const": "versions",
                        "description": "List of OpenC2 Language versions supported by this Actuator"
                    },
                    {
                        "const": "profiles",
                        "description": "List of profiles supported by this Actuator"
                    },
                    {
                        "const": "pairs",
                        "description": "List of supported Actions and applicable Targets"
                    },
                    {
                        "const": "rate_limit",
                        "description": "Maximum number of Commands per minute supported by design or policy"
                    }
                ]
            },
            "Hashes": {
                "title": "OpenC2 Hashes",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "md5": {
                        "$ref": "#/definitions/Binary",
                        "description": "MD5 hash as defined in [RFC1321]"
                    },
                    "sha1": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA1 hash as defined in [RFC6234]"
                    },
                    "sha256": {
                        "$ref": "#/definitions/Binary",
                        "description": "SHA256 hash as defined in [RFC6234]"
                    }
                }
            },
            "Hostname": {
                "title": "OpenC2 Hostname",
                "type": "string",
                "description": "Internet host name as specified in [RFC1123]",
                "format": "hostname"
            },
            "L4-Protocol": {
                "title": "OpenC2 layer four protocol",
                "type": "string",
                "description": "Value of the protocol (IPv4) or next header (IPv6) field in an IP packet. Any IANA value - [RFC5237]",
                "oneOf": [
                    {
                        "const": "icmp",
                        "description": "Internet Control Message Protocol - [RFC0792]"
                    },
                    {
                        "const": "tcp",
                        "description": "Transmission Control Protocol - [RFC0793]"
                    },
                    {
                        "const": "udp",
                        "description": "User Datagram Protocol - [RFC0768]"
                    },
                    {
                        "const": "sctp",
                        "description": "Stream Control Transmission Protocol - [RFC4960]"
                    }
                ]
            },
            "Nsid": {
                "title": "Namespace Identifier",
                "type": "string",
                "description": "A short identifier that refers to a namespace",
                "minLength": 1,
                "maxLength": 16
            },
            "Port": {
                "title": "OpenC2 Port",
                "type": "integer",
                "description": "Transport Protocol Port Number - [RFC6335]",
                "minimum": 0,
                "maximum": 65535
            },
            "Response-Type": {
                "title": "OpenC2 Response Type",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "No response"
                    },
                    {
                        "const": "ack",
                        "description": "Respond when Command received"
                    },
                    {
                        "const": "status",
                        "description": "Respond with progress toward Command completion"
                    },
                    {
                        "const": "complete",
                        "description": "Respond when all aspects of Command completed"
                    }
                ]
            },
            "Version": {
                "title": "OpenC2 Version",
                "type": "string",
                "description": "Major.Minor version number",
                "pattern": "^\\d+\\.\\d+$"
            },
            "Binary": {
                "title": "OpenC2 Binary",
                "type": "string",
                "contentEncoding": "base64"
            },
            "Command-ID": {
                "title": "OpenC2 Command Identifier",
                "type": "string"
            },
            "slpf:Args": {
                "title": "SLPF Args Specifiers",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "drop_process": {
                        "$ref": "#/definitions/slpf:Drop-Process",
                        "description": "Specifies how to handle denied packets"
                    },
                    "persistent": {
                        "type": "boolean",
                        "description": "Normal operations assume any changes to a device are to be implemented persistently. Setting the persistent modifier to FALSE results in a change that is not persistent in the event of a reboot or restart"
                    },
                    "direction": {
                        "$ref": "#/definitions/slpf:Direction",
                        "description": "Specifies whether to apply rules to incoming or outgoing traffic. If omitted, rules are applied to both"
                    },
                    "insert_rule": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Specifies the identifier of the rule within a list, typically used in a top-down rule list"
                    }
                }
            },
            "slpf:Drop-Process": {
                "title": "SLPF drop process types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "none",
                        "description": "Drop the packet and do not send a notification to the source of the packet"
                    },
                    {
                        "const": "reject",
                        "description": "Drop the packet and send an ICMP host unreachable (or equivalent) to the source of the packet"
                    },
                    {
                        "const": "false_ack",
                        "description": "Drop the traffic and send a false acknowledgment"
                    }
                ]
            },
            "slpf:Direction": {
                "title": "SLPF direction types",
                "type": "string",
                "oneOf": [
                    {
                        "const": "both",
                        "description": "Apply rules to all traffic"
                    },
                    {
                        "const": "ingress",
                        "description": "Apply rules to incoming traffic only"
                    },
                    {
                        "const": "egress",
                        "description": "Apply rules to outgoing traffic only"
                    }
                ]
            },
            "slpf:Rule-ID": {
                "title": "SLPF access rule identifier",
                "type": "integer",
                "description": "Immutable identifier assigned when a rule is created. Identifies a rule to be deleted"
            },
            "slpf:Actuator": {
                "title": "SLPF Actuator specifiers",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "hostname": {
                        "$ref": "#/definitions/Hostname",
                        "description": "[RFC1123] hostname (can be a domain name or IP address) for a particular device with SLPF functionality"
                    },
                    "named_group": {
                        "type": "string",
                        "description": "User defined collection of devices with SLPF functionality"
                    },
                    "asset_id": {
                        "type": "string",
                        "description": "Unique identifier for a particular SLPF"
                    },
                    "asset_tuple": {
                        "type": "array",
                        "description": "Unique tuple identifier for a particular SLPF consisting of a list of up to 10 strings",
                        "uniqueItems": true,
                        "minItems": 1,
                        "maxItems": 10,
                        "items": {
                            "title": "SLPF asset tuple",
                            "type": "string"
                        }
                    }
                }
            },
            "slpf:Response": {
                "title": "SLPF response types",
                "type": "object",
                "additionalProperties": false,
                "minProperties": 1,
                "properties": {
                    "rule_number": {
                        "$ref": "#/definitions/slpf:Rule-ID",
                        "description": "Rule identifier returned from allow or deny Command"
                    }
                }
            }
        }
    }
}